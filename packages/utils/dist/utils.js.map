{"version":3,"file":"utils.js","sources":["../src/toBool.js","../src/env.js","../src/toRoman.js","../src/toLetter.js"],"sourcesContent":["import { isString } from 'lodash-es'\r\n\r\n/**\r\n * @render utils\r\n * @name toBool\r\n * @param val\r\n * @returns {boolean}\r\n * @description Convert value to a boolean.\r\n * @example\r\n * toBool(true); // -> true\r\n * toBool(null); // -> false\r\n * toBool(1); // -> true\r\n * toBool(0); // -> false\r\n * toBool('0'); // -> false\r\n * toBool('1'); // -> true\r\n * toBool('false'); // -> false\r\n */\r\n\r\nfunction toBool(val) {\r\n    if (isString(val)) {\r\n        val = val.toLowerCase();\r\n        return val !== '0' && val !== '' && val !== 'false';\r\n    }\r\n\r\n    return !!val;\r\n}\r\n\r\nexport default toBool","import dotenv from 'dotenv'\r\nimport { toLower } from 'lodash'\r\nimport collect from 'collect.js'\r\n\r\n/**\r\n * @static\r\n * @description Gets the value of an environment variable.\r\n * @param {string} key\r\n * @param {mixed} _default\r\n * @return {mixed}\r\n */\r\n\r\nfunction env(key, _default = null) {\r\n    const result = dotenv.config()\r\n\r\n    if (result.error) {\r\n        throw result.error\r\n    }\r\n\r\n    return collect(result.parsed).map(v => {\r\n        switch (toLower(v)) {\r\n            case 'true':\r\n            case '(true)':\r\n                return true;\r\n            case 'false':\r\n            case '(false)':\r\n                return false;\r\n            case 'empty':\r\n            case '(empty)':\r\n                return '';\r\n            case 'null':\r\n            case '(null)':\r\n                return;\r\n        }\r\n\r\n        return v;\r\n    }).get(key, _default)\r\n}\r\n\r\nexport default env","/**\r\n * @render utils\r\n * @name toRoman\r\n * @param num\r\n * @returns {string}\r\n * @description Convert number to roman.\r\n * https://forum.freecodecamp.org/t/freecodecamp-challenge-guide-roman-numeral-converter/16044\r\n * @example\r\n * toRoman(1); // -> I\r\n * toRoman(2); // -> II\r\n */\r\nimport {lowerCase} from \"lodash-es\";\r\n\r\nfunction toRoman(num, isLowercase) {\r\n    if (typeof num !== 'number') return false\r\n\r\n    let digits = String(+num).split(\"\"),\r\n        key = [\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\",\r\n            \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\",\r\n            \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"],\r\n        roman_num = \"\",\r\n        i = 3;\r\n    while (i--)\r\n        roman_num = (key[+digits.pop() + (i * 10)] || \"\") + roman_num\r\n\r\n    let romanStr = Array(+digits.join(\"\") + 1).join(\"M\") + roman_num\r\n\r\n    return isLowercase ? lowerCase(romanStr) :  romanStr;\r\n}\r\n\r\nexport default toRoman","/**\r\n * @render utils\r\n * @name toLetter\r\n * @param int\r\n * @param uppercase\r\n * @returns {string}\r\n * @example\r\n * toLetter(1); // -> a\r\n * toLetter(1, true); // -> A\r\n */\r\n\r\nimport {lowerCase} from 'lodash-es'\r\n\r\nfunction toLetter(int, isLowercase = false) {\r\n    let letter = String.fromCharCode((int-1) + 65)\r\n    return isLowercase ? lowerCase(letter) : letter\r\n}\r\n\r\nexport default toLetter"],"names":["toBool","val","isString","toLowerCase","env","key","_default","result","dotenv","config","error","collect","parsed","map","v","toLower","get","toRoman","num","isLowercase","digits","String","split","roman_num","i","pop","romanStr","Array","join","lowerCase","toLetter","int","letter","fromCharCode"],"mappings":";;;;;;;AAEA;;;;;;;;;;;;;;;;AAgBA,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AACjB,MAAIC,iBAAQ,CAACD,GAAD,CAAZ,EAAmB;AACfA,IAAAA,GAAG,GAAGA,GAAG,CAACE,WAAJ,EAAN;AACA,WAAOF,GAAG,KAAK,GAAR,IAAeA,GAAG,KAAK,EAAvB,IAA6BA,GAAG,KAAK,OAA5C;AACH;;AAED,SAAO,CAAC,CAACA,GAAT;AACH;;ACrBD;;;;;;;;AAQA,SAASG,GAAT,CAAaC,GAAb,EAAkBC,QAAlB,EAAmC;AAAA,MAAjBA,QAAiB;AAAjBA,IAAAA,QAAiB,GAAN,IAAM;AAAA;;AAC/B,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,EAAf;;AAEA,MAAIF,MAAM,CAACG,KAAX,EAAkB;AACd,UAAMH,MAAM,CAACG,KAAb;AACH;;AAED,SAAOC,OAAO,CAACJ,MAAM,CAACK,MAAR,CAAP,CAAuBC,GAAvB,CAA2B,UAAAC,CAAC,EAAI;AACnC,YAAQC,cAAO,CAACD,CAAD,CAAf;AACI,WAAK,MAAL;AACA,WAAK,QAAL;AACI,eAAO,IAAP;;AACJ,WAAK,OAAL;AACA,WAAK,SAAL;AACI,eAAO,KAAP;;AACJ,WAAK,OAAL;AACA,WAAK,SAAL;AACI,eAAO,EAAP;;AACJ,WAAK,MAAL;AACA,WAAK,QAAL;AACI;AAZR;;AAeA,WAAOA,CAAP;AACH,GAjBM,EAiBJE,GAjBI,CAiBAX,GAjBA,EAiBKC,QAjBL,CAAP;AAkBH;;ACrCD;;;;;;;;;;;AAWA;AAEA,SAASW,OAAT,CAAiBC,GAAjB,EAAsBC,WAAtB,EAAmC;AAC/B,MAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B,OAAO,KAAP;AAE7B,MAAIE,MAAM,GAAGC,MAAM,CAAC,CAACH,GAAF,CAAN,CAAaI,KAAb,CAAmB,EAAnB,CAAb;AAAA,MACIjB,GAAG,GAAG,CAAC,EAAD,EAAK,GAAL,EAAU,IAAV,EAAgB,KAAhB,EAAuB,IAAvB,EAA6B,GAA7B,EAAkC,IAAlC,EAAwC,KAAxC,EAA+C,MAA/C,EAAuD,IAAvD,EACF,EADE,EACE,GADF,EACO,IADP,EACa,KADb,EACoB,IADpB,EAC0B,GAD1B,EAC+B,IAD/B,EACqC,KADrC,EAC4C,MAD5C,EACoD,IADpD,EAEF,EAFE,EAEE,GAFF,EAEO,IAFP,EAEa,KAFb,EAEoB,IAFpB,EAE0B,GAF1B,EAE+B,IAF/B,EAEqC,KAFrC,EAE4C,MAF5C,EAEoD,IAFpD,CADV;AAAA,MAIIkB,SAAS,GAAG,EAJhB;AAAA,MAKIC,CAAC,GAAG,CALR;;AAMA,SAAOA,CAAC,EAAR;AACID,IAAAA,SAAS,GAAG,CAAClB,GAAG,CAAC,CAACe,MAAM,CAACK,GAAP,EAAD,GAAiBD,CAAC,GAAG,EAAtB,CAAH,IAAiC,EAAlC,IAAwCD,SAApD;AADJ;;AAGA,MAAIG,QAAQ,GAAGC,KAAK,CAAC,CAACP,MAAM,CAACQ,IAAP,CAAY,EAAZ,CAAD,GAAmB,CAApB,CAAL,CAA4BA,IAA5B,CAAiC,GAAjC,IAAwCL,SAAvD;AAEA,SAAOJ,WAAW,GAAGU,kBAAS,CAACH,QAAD,CAAZ,GAA0BA,QAA5C;AACH;;AC5BD;;;;;;;;;;AAWA;AAEA,SAASI,QAAT,CAAkBC,IAAlB,EAAuBZ,WAAvB,EAA4C;AAAA,MAArBA,WAAqB;AAArBA,IAAAA,WAAqB,GAAP,KAAO;AAAA;;AACxC,MAAIa,MAAM,GAAGX,MAAM,CAACY,YAAP,CAAqBF,IAAG,GAAC,CAAL,GAAU,EAA9B,CAAb;AACA,SAAOZ,WAAW,GAAGU,kBAAS,CAACG,MAAD,CAAZ,GAAuBA,MAAzC;AACH;;;;;;;"}